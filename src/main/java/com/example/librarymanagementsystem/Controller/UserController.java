package com.example.librarymanagementsystem.Controller;

//package com.example.librarymanagement.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.librarymanagementsystem.Entity.User;
import com.example.librarymanagementsystem.Repository.UserRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class UserController {
//   private static final String Username = null;
//   private static final String PasswordHash = null;
    @Autowired // This means to get the bean called userRepository
             // Which is auto-generated by Spring, we will use it to handle the data
      private UserRepository userRepository;
    
      @PostMapping(path="/add") // Map ONLY POST Requests
      public @ResponseBody String addNewUser (@RequestParam int UserId, @RequestParam String Username, @RequestParam String PasswordHash, @RequestParam String Role) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
    
        User n = new User();
        n.setUserId(UserId);
        n.setUsername(Username);
        n.setPasswordHash(PasswordHash);
        n.setRole(Role);
        userRepository.save(n);
        return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
}
